name: 更新 CHANGELOG

on:
  push:
    tags:
      - "v*"  # 仅在推送 tag 时触发
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v4

      - name: 获取当前版本 Tag 和上一个 Tag
        id: tags
        run: |
          CURRENT_TAG=${GITHUB_REF#refs/tags/}
          TAGS=($(git tag --sort=-creatordate))
          PREVIOUS_TAG=""

          for tag in "${TAGS[@]}"; do
            if [[ "$tag" != "$CURRENT_TAG" ]]; then
              PREVIOUS_TAG=$tag
              break
            fi
          done

          echo "当前 Tag: $CURRENT_TAG"
          echo "上一个 Tag: $PREVIOUS_TAG"
          echo "current_tag=$CURRENT_TAG" >> $GITHUB_OUTPUT
          echo "previous_tag=$PREVIOUS_TAG" >> $GITHUB_OUTPUT

      - name: 生成更新日志
        id: changelog
        run: |
          echo "## ✨ ${{ steps.tags.outputs.current_tag }} ($(date '+%Y-%m-%d'))" > NEW_CHANGELOG.md
          echo "" >> NEW_CHANGELOG.md

          if [ -z "${{ steps.tags.outputs.previous_tag }}" ]; then
            git log --pretty=format:"* %s" >> NEW_CHANGELOG.md
          else
            git log ${{ steps.tags.outputs.previous_tag }}..${{ steps.tags.outputs.current_tag }} --pretty=format:"* %s" >> NEW_CHANGELOG.md
          fi

          echo -e "\n---\n" >> NEW_CHANGELOG.md
          cat CHANGELOG.md >> NEW_CHANGELOG.md
          mv NEW_CHANGELOG.md CHANGELOG.md

      - name: 提交更新日志
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "自动更新 CHANGELOG.md for ${{ steps.tags.outputs.current_tag }}"
          git push origin HEAD:main
