import time

from 任务流程.基础任务框架 import 基础任务, 任务上下文
from 核心.核心异常们 import 图像获取失败


class 检查图像任务(基础任务):
    """检查模拟器图像是否可以正常获取"""

    def 执行(self, 上下文: '任务上下文') -> bool:
        try:
            最多尝试次数 = 3

            for 尝试次数 in range(最多尝试次数):
                try:
                    # 截取屏幕图像，默认区域为左上角800×600
                    图像 = 上下文.op.获取屏幕图像cv(0, 0, 800, 600)
                    break  # 成功就跳出循环
                except 图像获取失败 as 异常实例:
                    if 尝试次数 < 最多尝试次数 - 1:
                        if 尝试次数 > 0:
                            上下文.置脚本状态("获取图像黑屏，尝试激活模拟器修复")

                        # 模拟鼠标激活模拟器窗口操作
                        time.sleep(0.5)
                        上下文.鼠标.移动到(467, 363)
                        上下文.鼠标.左键按下()
                        for _ in range(45):
                            上下文.鼠标.移动相对位置(0, -5)
                            time.sleep(0.005)
                        上下文.鼠标.左键抬起()
                        time.sleep(1)
                    else:
                        # 最后一次尝试失败，清理并抛异常
                        上下文.op.安全清理()
                        raise 图像获取失败(f"重试获取图片 {尝试次数 + 1} 次后仍失败")

            上下文.置脚本状态("模拟器图像获取正常")
            return True

        except Exception as e:
            self.异常处理(上下文, e)
            上下文.发送重启请求(str(e))
            return False

    def 异常处理(self, 上下文: '任务上下文', 异常: Exception):
        上下文.置脚本状态(f"任务[{self.__class__.__name__}] 异常：{异常}")

